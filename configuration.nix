# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

# sudo nix-collect-garbage --delete-older-than 15d


{ config, pkgs, inputs, ... }:
{
  imports = [ # Include the results of the hardware scan.
    ./hardware-configuration.nix
  ];

  nix.settings.experimental-features = [
    "nix-command" "flakes"
  ];

  # Bootloader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  networking.hostName = "lunar"; # Define your hostname.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.

  # Configure network proxy if necessary
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # Enable networking
  networking.networkmanager.enable = true;

  # Set your time zone.
  time.timeZone = "America/New_York";

  # Select internationalisation properties.
  i18n.defaultLocale = "en_US.UTF-8";

  i18n.extraLocaleSettings = {
    LC_ADDRESS = "en_US.UTF-8";
    LC_IDENTIFICATION = "en_US.UTF-8";
    LC_MEASUREMENT = "en_US.UTF-8";
    LC_MONETARY = "en_US.UTF-8";
    LC_NAME = "en_US.UTF-8";
    LC_NUMERIC = "en_US.UTF-8";
    LC_PAPER = "en_US.UTF-8";
    LC_TELEPHONE = "en_US.UTF-8";
    LC_TIME = "en_US.UTF-8";
  };

  # Enable the X11 windowing system.
  # You can disable this if you're only using the Wayland session.
  services.xserver.enable = true;

  # Enable the KDE Plasma Desktop Environment.services.xserver.desktopManager.cinnamon.enable
  services.displayManager.sddm.enable = true;
  services.desktopManager.plasma6.enable = true;
  # services.xserver.desktopManager.cinnamon.enable = true;
  # services.desktopManager.cosmic.enable = true; # Unstable will wait for 25.05

  # Configure keymap in X11
  services.xserver.xkb = {
    layout = "us";
    variant = "";
  };

  # Enable CUPS to print documents.
  services.printing.enable = true;

  # Enable sound with pipewire.
  hardware.pulseaudio.enable = false;
  security.rtkit.enable = true;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    # If you want to use JACK applications, uncomment this
    #jack.enable = true;

    # use the example session manager (no others are packaged yet so this is enabled by default,
    # no need to redefine it in your config for now)
    #media-session.enable = true;
  };

  # Enable touchpad support (enabled default in most desktopManager).
  # services.xserver.libinput.enable = true;


  programs.nix-ld.enable = true;
  programs.nix-ld.libraries = with pkgs; [
    # Add any missing Dynamic libraries for unpackaged programs here, NOT in environment.systemPackages
  ];

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.wis = {
    isNormalUser = true;
    description = "wis";
    extraGroups = [ "networkmanager" "wheel" ];
    packages = with pkgs; [
      thunderbird
      brave
      zsh

      # Work
      protonvpn-gui
      protonmail-desktop
      proton-pass
      # unstable.rustdesk-flutter

      # Play
      discord
      spotify
      qbittorrent
      vlc
      neofetch

      # Creatives
      krita
      # gimp
      # libreoffice

      # Programming
      ## Editors
      kdePackages.kate
      zed-editor # High-performance, multiplayer code editor
      vscode
      neovim

      # Tools
      git
      docker
      # unstable.github-desktop
      uv # Python Package manager
      gnumake
      unixtools.xxd # File HEX viewer

      # Tools writen in Rust
      uutils-coreutils-noprefix # Replacement for all core utils in Rust
      fish # Smart and user-friendly command line shell
      nushell # Modern shell
      ripgrep # Utility that combines the usability of The Silver Searcher with the raw speed of grep
      ripgrep-all # Ripgrep, but also search in PDFs, E-Books, Office documents, zip, tar.gz, and more
      fd # Simple, fast and user-friendly alternative to find
      bat # Cat(1) clone
      eza # Modern, maintained replacement for ls
      # zoxide # differant smarter cd command
      xh # send http fast
      zellij # tmux alternative
      gitui # fast terminal-ui for Git
      dust # Disk size usage - Like du but more intuitive
      dua # Tool to conveniently learn about the disk usage of directories
      starship # customizable prompt for any shell
      yazi # fast terminal file manager
      hyperfine # Command-line benchmarking tool
      bacon # Background rust code checker
      cargo-info # Cargo subcommand to show crates info from crates.io
      fselect # Find files with SQL-like queries
      ncspot # Cross-platform ncurses Spotify client
      rusty-man # Command-line viewer for documentation generated by rustdoc
      delta # Syntax-highlighting pager for git
      tokei # Count your code, quickly
      wiki-tui # Simple and easy to use Wikipedia Text User Interface
      just # Handy way to save and run project-specific commands
      # mask # CLI task runner defined by a simple markdown file
      mprocs # TUI tool to run multiple commands in parallel
      presenterm # Terminal based slideshow tool
      kondo # Save disk space by cleaning unneeded files from software projects

      # Langauges
      python314
      # unstable.zig # General-purpose programming language and toolchain
      rustup # Rust toolchain installer
      # unstable.go # Go Programming language
      gcc # Gnu Compiler Collection

      # Javascript
      nodejs
      bun

      # Nim Lang
      # nim
      # nimble

      # Libraries and tools
      templ # Language for writing HTML user interfaces in Go
      air # Live reload for Go apps
      hugo # Fast and modern static website engine
    ];
  };

  # Configure Steam
  programs.steam = {
    enable = true;
    remotePlay.openFirewall = false; # Open ports in the firewall for Steam Remote Play
    dedicatedServer.openFirewall = false; # Open ports in the firewall for Source Dedicated Server
    localNetworkGameTransfers.openFirewall = false; # Open ports in the firewall for Steam Local Network Game Transfers
  };

  # Enable automatic login for the user.
  services.displayManager.autoLogin.enable = true;
  services.displayManager.autoLogin.user = "wis";

  # Install firefox.
  programs.firefox.enable = true;

  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  # List packages installed in system profile. To search, run:
  # $ nix search wget
  environment.systemPackages = with pkgs; [
  #  vim # Do not forget to add an editor to edit configuration.nix! The Nano editor is also installed by default.
    wget
    curl

  ];

  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;
  # programs.gnupg.agent = {
  #   enable = true;
  #   enableSSHSupport = true;
  # };

  # List services that you want to enable:

  # Enable the OpenSSH daemon.
  # services.openssh.enable = true;

  # Open ports in the firewall.
  networking.firewall.allowedTCPPorts = [
    # 3389
  ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  networking.firewall.enable = true;

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "25.05"; # Did you read the comment?

}
